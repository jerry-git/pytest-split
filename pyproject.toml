[tool.poetry]
name = "pytest-split"
version = "0.8.2"
description = "Pytest plugin which splits the test suite to equally sized sub suites based on test execution time."
authors = [
    "Jerry Pussinen <jerry.pussinen@gmail.com>",
]
license = "MIT"
readme = "README.md"

documentation = "https://jerry-git.github.io/pytest-split"
homepage = "https://jerry-git.github.io/pytest-split"
repository = "https://github.com/jerry-git/pytest-split"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

keywords = ['pytest', 'plugin', 'split', 'tests']
packages = [{ include = 'pytest_split', from = 'src' }]
include = ['LICENCE']


[tool.poetry.dependencies]
python = ">=3.7.1, <4.0"
pytest = "^5 | ^6 | ^7 | ^8"


[tool.poetry.dev-dependencies]
black = "*"
importlib-metadata = "==4.11.*"
mkdocstrings = {version = ">=0.18", extras = ["python"]}
mkdocs-material = "*"
mypy = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
ruff = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
slowest-tests = "pytest_split.cli:list_slowest_tests"
combine-tests = "pytest_split.cli:run_combine_tests"

[tool.poetry.plugins.pytest11]
pytest-split = "pytest_split.plugin"

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov pytest_split \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 90
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ['tests.*']
disallow_untyped_defs = false
strict_equality = false

[tool.ruff]
select = ["ALL"]
ignore = [
    "ANN",      # Type hints related, let mypy handle these.
    "COM812",   # "Trailing comma missing". If black is happy, I'm happy.
    "D",        # Docstrings related
    "E501",     # "Line too long". If black is happy, I'm happy.
    "EM101",    # "Exception must not use a string literal, assign to variable first"
    "EM102",    # "Exception must not use an f-string literal, assign to variable first"
    "PTH",      # User Pathlib stuff over os.*. Should migrate to Pathlib at some point.
    "RET504",   # "Unnecessary variable assignment before `return` statement"
    "S101",     # "Use of `assert` detected"
    "SIM108",   # "Use ternary operator ...". Ternary is harmful for readability in some cases.
    "TRY003",   # "Avoid specifying long messages outside the exception class"
    "FA100", 	# "Missing `from __future__ import annotations` ..." pytest-split supports a range of Python versions
    ]
line-length = 88
target-version = "py37"
